// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require("Verifier");

// - use the contents from proof.json generated from zokrates steps
const proofs = require("../../zokrates/code/square/proof");

contract("Verifier contract", (accounts) => {
  const account_one = accounts[0];

  beforeEach(async function () {
    this.contract = await Verifier.new({ from: account_one });
  });

  // Test verification with correct proof
  it("Should verify the proof to be truely", async function () {
    const res = await this.contract.verifyTx.call(
      proofs.proof.a,
      proofs.proof.b,
      proofs.proof.c,
      proofs.inputs
    );

    assert.equal(res, true, "Error : Incorrect proof");
  });

  // Test verification with incorrect proof
  it("Should verify the proof to be falsy", async function () {
    const res = await this.contract.verifyTx.call(
      proofs.proof.a,
      proofs.proof.b,
      proofs.proof.c,
      [account_one, account_one]
    );

    assert.notEqual(res, true, "Error : Incorrect proof");
  });
});
